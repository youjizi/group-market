<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yjz.group.infrastructure.persistent.dao.IGroupBuyActivityDao">

    <!-- 结果映射定义 -->
    <resultMap id="groupBuyActivityResultMap" type="cn.yjz.group.infrastructure.persistent.po.GroupBuyActivity">
        <id column="id" property="id"/>
        <result column="activity_id" property="activityId"/>
        <result column="activity_name" property="activityName"/>
        <result column="source" property="source"/>
        <result column="channel" property="channel"/>
        <result column="goods_id" property="goodsId"/>
        <result column="discount_id" property="discountId"/>
        <result column="group_type" property="groupType"/>
        <result column="take_limit_count" property="takeLimitCount"/>
        <result column="target" property="target"/>
        <result column="valid_time" property="validTime"/>
        <result column="status" property="status"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="tag_id" property="tagId"/>
        <result column="tag_scope" property="tagScope"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 插入拼团活动 -->
    <insert id="insertGroupBuyActivity" parameterType="cn.yjz.group.infrastructure.persistent.po.GroupBuyActivity"  >
        INSERT INTO group_buy_activity (activity_id, source, channel, goods_id, discount_id,
                                        group_type, take_limit_count, target, valid_time,
                                        status, start_time, end_time, tag_id, tag_scope,
                                        create_time, update_time)
        VALUES (#{activityId}, #{source}, #{channel}, #{goodsId}, #{discountId},
                #{groupType}, #{takeLimitCount}, #{target}, #{validTime},
                #{status}, #{startTime}, #{endTime}, #{tagId}, #{tagScope},
                now(), now())
    </insert>

    <!-- 根据ID删除拼团活动 -->
    <delete id="deleteGroupBuyActivityById" parameterType="long">
        DELETE FROM group_buy_activity WHERE activity_id = #{activityId}
    </delete>

    <!-- 更新拼团活动 -->
    <update id="updateGroupBuyActivity" parameterType="cn.yjz.group.infrastructure.persistent.po.GroupBuyActivity">
        UPDATE group_buy_activity
        SET source = #{source},
            channel = #{channel},
            goods_id = #{goodsId},
            discount_id = #{discountId},
            group_type = #{groupType},
            take_limit_count = #{takeLimitCount},
            target = #{target},
            valid_time = #{validTime},
            status = #{status},
            start_time = #{startTime},
            end_time = #{endTime},
            tag_id = #{tagId},
            tag_scope = #{tagScope},
            update_time = now()
        WHERE activity_id = #{activityId}
    </update>

    <!-- 根据ID查询拼团活动 -->
    <select id="selectGroupBuyActivityById" parameterType="long" resultMap="groupBuyActivityResultMap">
        SELECT * FROM group_buy_activity WHERE id = #{id}
    </select>

    <!-- 查询所有拼团活动 -->
    <select id="selectAllGroupBuyActivities" resultMap="groupBuyActivityResultMap">
        SELECT * FROM group_buy_activity
    </select>

    <!-- 根据活动状态查询拼团活动 -->
    <select id="selectGroupBuyActivitiesByStatus" parameterType="int" resultMap="groupBuyActivityResultMap">
        SELECT * FROM group_buy_activity WHERE status = #{status}
    </select>


    <select id="queryValidGroupBuyActivity" parameterType="cn.yjz.group.infrastructure.persistent.po.GroupBuyActivity" resultMap="groupBuyActivityResultMap">
        select
            activity_id, activity_name, source, channel, goods_id,
            discount_id, group_type, take_limit_count, target, valid_time,
            status, start_time, end_time, tag_id, tag_scope
        from group_buy_activity
        where source = #{source} and channel = #{channel}
        order by id desc
            limit 1
    </select>

</mapper>